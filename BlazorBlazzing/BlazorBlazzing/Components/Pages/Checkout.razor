@page "/checkout"
@using System.Text.Json.Serialization
@inject OrderState OrderState
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
@implements IDisposable



<div class="main">
    <EditForm EditContext=editContext OnValidSubmit=PlaceOrder >
        <div class="checkout-cols">
            <div class="checkout-order-details">
                <h4>Review order</h4>
                <OrderReview Order="Order" />
            </div>

            <div class="checkout-delivery-address">
                <h4>Deliver to...</h4>
                @if (isError)
                {
                    <div class="alert alert-danger">Please enter a name and address.</div>
                }
                <AddressEditor Address="Order.DeliveryAddress" />
            </div>
        </div>
    
        <button class="checkout-button btn btn-warning" disabled=@isError>
            Place order
        </button>
        <DataAnnotationsValidator />
    </EditForm>
</div>

@code {

    private EditContext editContext;

    Order Order => OrderState.Order;

    bool isSubmitting;

    bool isError = false;

    protected override void OnInitialized()
    {
        editContext = new(Order.DeliveryAddress);
        editContext.OnFieldChanged += HandleFieldChanged;
    }

    async Task PlaceOrder()
    {
        Console.WriteLine(JsonConvert.SerializeObject(OrderState.Order));
        var response = await HttpClient.PostAsJsonAsync(NavigationManager.BaseUri + "orders", OrderState.Order);
        var results = response.Content.ReadAsStringAsync().Result;
        Console.WriteLine(results);
        var newOrderId = await response.Content.ReadFromJsonAsync<int>();
        OrderState.ResetOrder();
        NavigationManager.NavigateTo($"myorders/{newOrderId}");
    }

    private void HandleFieldChanged(object sender, FieldChangedEventArgs e)
    {
        isError = !editContext.Validate();
        StateHasChanged();
    }

    public void Dispose()
    {
        editContext.OnFieldChanged -= HandleFieldChanged;
    }
}